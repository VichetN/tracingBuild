{"version":3,"sources":["graphql/verify.js","page/Verify.js","function/fn.js","asset/success-sound.mp3","config/firebase.js","page/Success.js","graphql/shop.js","page/Login.js","asset/srLogo-nobg.png","dynamic/navbar.js","page/PleaseScan.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["VERIFY_CODE","gql","CREATE_TRANSACTION","Verify","verifyCode","isMoble","personalInfo","Form","useForm","form","useState","loading","setLoading","xs","md","style","margin","width","name","onFinish","values","code","onFinishFailed","errorInfo","console","log","color","textAlign","className","fontSize","Item","rules","required","message","placeholder","size","borderRadius","htmlType","type","getKhmerDate","date","d","moment","parseZone","format","toString","m","y","numArr","split","yearArr","numberKh","newArr","nd","i","length","push","join","ny","getKhmerTime","number","isNaN","getKhmerNumber","auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","Success","shopData","today","Date","useHistory","Audio","SuccessSound","useSound","volume","play","useEffect","sessionStorage","setItem","height","border","padding","paddingTop","boxShadow","id","onClick","GET_SHOP_BY_ID","Login","useParams","history","userData","setUserData","setShopData","setIsMobile","confirmResult","setConfirmResult","isSent","setIsSent","setPersonalInfo","handleResize","window","innerWidth","addEventListener","useQuery","variables","shopId","onCompleted","getShopById","onError","error","data","JSON","parse","localStorage","getItem","removeItem","onAuthStateChanged","user","person","displayName","createTransaction","personalInfoId","useMutation","success","phonenumber","tel","stringify","updateProfile","currentUser","then","catch","verifyLoading","formatPhoneNumber","e","substring","undefined","onSignInSubmit","a","recaptchaVerifier","RecaptchaVerifier","response","phoneNumber1","appVerifier","signInWithPhoneNumber","confirmationResult","confirmCode","confirm","result","firstName","lastName","onChange","test","setFieldsValue","handleNumber","target","value","Header","Layout","Navbar","background","sm","lg","src","Logo","preview","marginTop","PleaseScan","Footer","Content","Routes","App","client","ApolloClient","uri","process","cache","InMemoryCache","ApolloProvider","title","description","meta","charset","minHeight","path","children","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b67b9fc.chunk.js","sourcesContent":["import {gql} from '@apollo/client'\r\n\r\nexport const SENDING_PHONE = gql`\r\nmutation sendingPhone($phonenumber:String){\r\n    sendingPhone(phonenumber:$phonenumber){\r\n      success\r\n      message\r\n    }\r\n}\r\n`\r\n\r\nexport const VERIFY_CODE = gql`\r\nmutation verifyCode($phonenumber:String,$code:String,$firstName:String,$lastName:String){\r\n    verifyCode(phonenumber:$phonenumber,code:$code,firstName:$firstName,lastName:$lastName){\r\n      success\r\n      message\r\n      id\r\n    }\r\n}\r\n`\r\n\r\nexport const CREATE_TRANSACTION = gql`\r\nmutation createTransaction($personalInfoId:ID!,$shopId:ID!){\r\n    createTransaction(personalInfoId:$personalInfoId,shopId:$shopId){\r\n        success\r\n        message\r\n    }\r\n}\r\n`","import React, { useState } from 'react'\r\nimport { Input,Button, Form,Row,Col,Card, message } from 'antd'\r\nimport {AiOutlineNumber} from 'react-icons/ai'\r\nimport {FaArrowAltCircleRight, FaUnlockAlt} from 'react-icons/fa'\r\nexport default function Verify({verifyCode,personalInfo,isMoble}) {\r\n    let [form] = Form.useForm()\r\n\r\n    const [loading,setLoading] = useState(false)\r\n    \r\n    const onFinish = (values) => {\r\n        // verifyCode({\r\n        //     variables:{\r\n        //         ...personalInfo,\r\n        //         phonenumber:personalInfo?.tel,\r\n        //         code:values.code\r\n        //     }\r\n        // })\r\n        verifyCode(values.code)\r\n        setLoading(true)\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row >\r\n               \r\n                <Col xs={24} md={24} >\r\n                    \r\n                    <Card\r\n                        style={{margin:'0 auto',width: isMoble ? '100%':'50%'}}\r\n                    >\r\n                        <Form\r\n                            form={form}\r\n                            name=\"verifyCode\"\r\n                            onFinish={onFinish}\r\n                            onFinishFailed={onFinishFailed}\r\n                            style={{color:'#014283'}}\r\n                        >\r\n                            <Row >\r\n                                <Col xs={24} md={24} style={{textAlign:'center'}}>\r\n                                    <h3 className=\"HeaderFont\">សូមបញ្ចូលលេខកូដដែលយើងបានផ្ញើទៅកាន់លេខទូរស័ព្ទរបស់អ្នក</h3><br/>\r\n                                </Col>\r\n                                <Col xs={24} md={24}>\r\n                                    <p style={{fontSize:18}}><FaUnlockAlt />&emsp;លេខកូដ</p>\r\n                                    <Form.Item\r\n                                        name=\"code\"\r\n                                        rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                    >\r\n                                        <Input placeholder=\"លេខកូដ\" size=\"large\" style={{borderRadius:10}} />\r\n                                    </Form.Item>\r\n                                    <p style={{fontSize:14, textAlign:'center'}}>លេខកូដនឹងផុតកំណត់ក្នុងរយៈពេល 30 វិនាទី</p>\r\n                                </Col>\r\n\r\n                                <Col xs={24} md={24}>\r\n                                    <Form.Item\r\n                                        \r\n                                    >\r\n                                        <Button\r\n                                            htmlType=\"submit\"\r\n                                            type=\"primary\"\r\n                                            size=\"large\"\r\n                                            style={{ width: \"100%\",borderRadius:10 }}\r\n                                            loading={loading}\r\n                                            \r\n                                        >\r\n                                            បន្ត&emsp;<FaArrowAltCircleRight/>\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n                        \r\n                        </Form>\r\n                    </Card>\r\n                    \r\n                </Col>\r\n               \r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import moment from \"moment\"\r\n\r\nexport function getKhmerNumber(number){\r\n\r\n    let numArr = number?.toString()?.split('')\r\n\r\n    let numberKh = ['០','១','២','៣','៤','៥','៦','៧','៨','៩']\r\n    let newArr = []\r\n\r\n    for(let i=0;i<numArr?.length;i++){\r\n        if(!isNaN(numArr[i]))\r\n            newArr.push(numberKh[numArr[i]])\r\n        else{\r\n            newArr.push(numArr[i])\r\n        }\r\n    }\r\n    return newArr?.join(\"\")\r\n  }\r\n\r\nexport function getKhmerDate(date){\r\n    let d = moment.parseZone(date).format(\"D\").toString()\r\n    let m = moment.parseZone(date).format(\"M\") - 1\r\n    let y = moment.parseZone(date).format(\"YYYY\").toString()\r\n  \r\n    let numArr = d.split('')\r\n    let yearArr = y.split(\"\")\r\n  \r\n    let numberKh = ['០','១','២','៣','៤','៥','៦','៧','៨','៩']\r\n    let monthKh = ['មករា','កុម្ភៈ','មិនា','មេសា','ឧសភា','មិថុនា','កក្កដា','សីហា','កញ្ញា','តុលា','វិច្ឆិកា','ធ្នូរ']\r\n    let newArr = []\r\n  \r\n    let nd =['ថ្ងៃទី']\r\n    for(let i=0;i<numArr.length;i++){\r\n      if(d < 10){\r\n        nd.push(numberKh[0])\r\n      }\r\n      nd.push(numberKh[numArr[i]])\r\n      if(i===numArr.length-1){\r\n        newArr.push(nd.join(\"\"))\r\n      }\r\n    }\r\n  \r\n    newArr.push('ខែ'+monthKh[m])\r\n  \r\n    let ny =['ឆ្នាំ']\r\n    for(let i=0;i<yearArr.length;i++){\r\n      // if(d < 10){\r\n      //   s.push(numberKh[0])\r\n      // }\r\n      ny.push(numberKh[yearArr[i]])\r\n      if(i===yearArr.length-1){\r\n        newArr.push(ny.join(\"\"))\r\n      }\r\n    }\r\n  \r\n    return newArr.join(\" \")\r\n  }\r\n\r\nexport const getKhmerTime=(date)=>{\r\n    let time = moment.parseZone(date).format(\"HH:mm\").toString()+\" នាទី\"\r\n    return getKhmerNumber(time)\r\n}","export default __webpack_public_path__ + \"static/media/success-sound.588291df.mp3\";","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from 'firebase/auth'\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBkrR5Bqi1DP7syi-WqxRBR38afDYTo31E\",\r\n  authDomain: \"travel-statistic.firebaseapp.com\",\r\n  projectId: \"travel-statistic\",\r\n  storageBucket: \"travel-statistic.appspot.com\",\r\n  messagingSenderId: \"295015207821\",\r\n  appId: \"1:295015207821:web:f567c9b812c9662ac8a3c4\",\r\n  measurementId: \"G-C8V5N5KPZT\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth();","import { Card, Col, Row } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getKhmerDate, getKhmerTime } from '../function/fn'\r\nimport {GiCheckMark} from 'react-icons/gi'\r\nimport {FcShop} from 'react-icons/fc'\r\nimport SuccessSound from '../asset/success-sound.mp3'\r\nimport useSound from 'use-sound'\r\nimport { useHistory } from 'react-router'\r\nimport { auth } from '../config/firebase'\r\n\r\n\r\nexport default function Success({isMoble,shopData}) {\r\n\r\n    const today = new Date()\r\n    const history = useHistory()\r\n    const [audio] = useState(new Audio(SuccessSound));\r\n    const [isDone,setIsDone] = useState(false)\r\n\r\n    const [play] = useSound(SuccessSound,{\r\n        volume:0.5\r\n    });\r\n    \r\n    useEffect(()=>{  \r\n        play()\r\n        sessionStorage.setItem('reloadCount','11');\r\n    },[])\r\n \r\n    return (\r\n        <>\r\n\r\n            <Row >\r\n                {/* <button onClick={()=> auth.signOut()}>FFF</button> */}\r\n               <Col xs={24} md={24} >\r\n                   \r\n                    <Card\r\n                        style={{margin:'0 auto',width: isMoble ? '100%':'50%', color:'#014283',textAlign:'center'}}\r\n                    >\r\n                \r\n                        <h2 className=\"HeaderFont\">សូមស្វាគមន៍មកកាន់</h2>\r\n                        <h2 className=\"HeaderFont\"><FcShop style={{fontSize:30}} /> {shopData?.name}</h2>\r\n                        <p>អ្នកមកដល់ទីនេះនៅ{getKhmerDate(today)} វេលាម៉ោង {getKhmerTime(today)}</p>\r\n                        \r\n                        <div style={{width:250,height:250,textAlign:\"center\", borderRadius:'50%',border:'35px solid #52c41a',margin:'0 auto',padding:0}}>\r\n                            <div style={{width:'100%',height:'100%',paddingTop:30, borderRadius:'50%',boxShadow:'rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px'}}>\r\n                                <h2 className=\"HeaderFont\" style={{color:'#9254de'}}>រួចរាល់</h2>\r\n                                <GiCheckMark id=\"success\" onClick={()=>play()} className=\"scale-animate\" style={{fontSize:80,color:'#52c41a'}} />\r\n\r\n                            </div>\r\n                        </div><br/>\r\n                        <p style={{fontSize:18}}>សូមអរគុណសម្រាប់ការចូលរួមរបស់អ្នក!</p>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import {gql} from '@apollo/client'\r\n\r\nexport const GET_SHOP_BY_ID = gql`\r\nquery getShopById($shopId:ID!){\r\n    getShopById(shopId:$shopId){\r\n        shopNumber\r\n        _id\r\n        name\r\n    }\r\n}\r\n`\r\n\r\n// export const GET_SHOP_BY_ID = gql`\r\n// query getShopById($shopId:ID!){\r\n//     getShopById(shopId:$shopId){\r\n//         shopNumber\r\n//         _id\r\n//         name\r\n//         registrationNumber\r\n//         acknowledgeAs\r\n//         registerDate\r\n//         village\r\n//         commune\r\n//         district\r\n//         province\r\n//         firstName\r\n//         lastName\r\n//         personalInfoId{\r\n//             id\r\n//             firstName\r\n//             lastName\r\n//             tel\r\n//         }\r\n//         tel\r\n//     }\r\n// }\r\n// `","import React, { useEffect, useState } from 'react'\r\nimport { Input,Button, Form,Row,Col,Card, message } from 'antd'\r\nimport { CREATE_TRANSACTION, SENDING_PHONE, VERIFY_CODE } from '../graphql/verify'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport Verify from './Verify'\r\nimport {FaArrowAltCircleRight} from 'react-icons/fa'\r\nimport {BsPersonLinesFill} from 'react-icons/bs'\r\nimport {MdOutlinePermPhoneMsg} from 'react-icons/md'\r\nimport Success from './Success'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { GET_SHOP_BY_ID } from '../graphql/shop'\r\nimport useSound from 'use-sound'\r\nimport SuccessSound from '../asset/success-sound.mp3'\r\nimport { RecaptchaVerifier, signInWithPhoneNumber, updateProfile } from 'firebase/auth'\r\nimport { auth } from '../config/firebase'\r\n\r\nexport default function Login() {\r\n\r\n    const { id } = useParams()\r\n    const history = useHistory()\r\n\r\n    const [loading,setLoading] = useState(false)\r\n\r\n    const [userData,setUserData] = useState(null)\r\n\r\n    const [play] = useSound(SuccessSound);\r\n\r\n    const [shopData,setShopData] = useState({})\r\n\r\n    const [isMoble,setIsMobile] = useState(false)\r\n    const [phoneNumber,setPhoneNumber] = useState(\"\")\r\n\r\n    \r\n    const [confirmResult, setConfirmResult] = useState(null)\r\n    \r\n\r\n    let [form] = Form.useForm()\r\n    const [isSent,setIsSent] = useState(\"sendCode\") //sendCode verifyCode successMessage\r\n    const [personalInfo,setPersonalInfo] = useState({})\r\n\r\n    const handleResize =()=>{\r\n        if(window.innerWidth <=960){\r\n            setIsMobile(true)\r\n        }else{\r\n            setIsMobile(false)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        handleResize()\r\n    },[])\r\n\r\n    window.addEventListener('resize',handleResize)\r\n\r\n    const {data,loading:shopLoading} = useQuery(GET_SHOP_BY_ID,{\r\n        variables:{\r\n            shopId:id\r\n        },\r\n        onCompleted: ({ getShopById }) => {\r\n            setShopData(getShopById)\r\n        },\r\n        onError: (error) => {\r\n            console.log(error)\r\n            history.push(\"/\")\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(data){\r\n            setShopData(data?.getShopById)\r\n        }\r\n    },[data])\r\n\r\n    useEffect(()=>{\r\n        let person = JSON.parse(localStorage.getItem(\"personalInfo\"))\r\n\r\n        const reloadCount = sessionStorage.getItem('reloadCount');\r\n\r\n        if(reloadCount === '11') {\r\n            history.push(\"/\")\r\n            sessionStorage.removeItem('reloadCount');\r\n        }\r\n        // else{\r\n        //     if(person){\r\n\r\n        //         createTransaction({\r\n        //             variables:{\r\n        //                 shopId:id,\r\n        //                 personalInfoId:person?.id,\r\n        //             }\r\n        //         })\r\n        //     }\r\n        // }\r\n        \r\n    },[])\r\n\r\n    auth.onAuthStateChanged(function (user) {\r\n        if (user) {\r\n                //User is signed in.  \r\n                setUserData(user)\r\n                // message.success(\"dsfdsfs\")\r\n                // createTransaction({\r\n                //     variables:{\r\n                //         personalInfoId:user.displayName,\r\n                //         shopId:id\r\n                //     }\r\n                // })\r\n        } else {\r\n              // No user i s signed in.\r\n                \r\n        }\r\n    });\r\n\r\n    useEffect(()=>{\r\n        let person = JSON.parse(localStorage.getItem(\"personalInfo\"))\r\n        if (userData!==null && userData.displayName===person?.id) {\r\n            // User is signed in, see docs for a list of available properties\r\n            // https://firebase.google.com/docs/reference/js/firebase.User\r\n            // ...\r\n            createTransaction({\r\n                variables:{\r\n                    personalInfoId:userData.displayName,\r\n                    shopId:id\r\n                }\r\n            })\r\n        } else {\r\n            // No user is signed in.\r\n      \r\n        }\r\n\r\n    },[userData])\r\n\r\n    const [createTransaction,{loading:transactionLoading}] = useMutation(CREATE_TRANSACTION,{\r\n        onCompleted: ({ createTransaction }) => {\r\n            if(createTransaction.success===true){\r\n                message.success(\"ការចុះឈ្មោះជោគជ័យ\")\r\n                setIsSent(\"successMessage\")\r\n            }else{\r\n                message.error(\"សូមមេត្តាស្កែន QR Code ម្តងទៀត!\")\r\n                history.push('/')\r\n            }\r\n        },\r\n        onError: (error) => {\r\n            message.error(\"សូមមេត្តាស្កែន QR Code ម្តងទៀត!\")\r\n            history.push('/')\r\n        }\r\n    })\r\n    \r\n\r\n    // verify code \r\n    const [verifyCode, { loading:verifyLoading}] = useMutation(VERIFY_CODE, {\r\n        onCompleted: ({ verifyCode }) => {\r\n            if(verifyCode.success===true){\r\n                // message.success(\"លេខកូដត្រឹមត្រូវ\")\r\n                // setIsSent(\"successMessage\")\r\n                let person = {id:verifyCode.id,phonenumber:personalInfo?.tel}\r\n                localStorage.setItem(\"personalInfo\",JSON.stringify(person))\r\n\r\n                // setIsSent(\"successMessage\")\r\n\r\n                // if(verifyCode.message===\"Verified\"){\r\n                //     // history.push(\"/\")\r\n                //     // auth.signOut()\r\n\r\n                //     createTransaction({\r\n                //         variables:{\r\n                //             personalInfoId:verifyCode.id,\r\n                //             shopId:id\r\n                //         }\r\n                //     })\r\n                // }else{\r\n                //     \r\n                // }\r\n\r\n                updateProfile(auth.currentUser, {\r\n                    displayName: verifyCode.id\r\n                }).then(() => {\r\n                    // Profile updated!\r\n                    // ...\r\n\r\n                    setUserData(auth.currentUser)\r\n\r\n                    createTransaction({\r\n                        variables:{\r\n                            personalInfoId:verifyCode.id,\r\n                            shopId:id\r\n                        }\r\n                    })\r\n                }).catch((error) => {\r\n                // An error occurred\r\n                // ...\r\n                    message.error(error)\r\n                });\r\n\r\n                \r\n            }else{\r\n                message.error(verifyCode.message)\r\n            }\r\n        },\r\n        onError: (error) => {\r\n            message.error(error.message)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        setLoading(true)\r\n        if(isNaN(values?.tel)){\r\n            message.error(\"សូមបញ្ចូលេខទូរស័ព្ទអោយត្រឹមត្រូវ!\")\r\n            return\r\n        }\r\n\r\n        onSignInSubmit({...values, tel:formatPhoneNumber(values?.tel)})\r\n\r\n        setPersonalInfo({\r\n            ...values,\r\n            tel:formatPhoneNumber(values?.tel)\r\n        })\r\n\r\n    };\r\n\r\n    const formatPhoneNumber =(e)=>{\r\n        let number = e\r\n        \r\n        if(number.substring(0,1)==='0'){\r\n            return \"+855\" + number.substring(1,number.length)\r\n        }\r\n        else if(number.substring(0,1)!=='0' && number.substring(0,3)==='855'){\r\n            return \"+855\" +number.substring(3,number.length)\r\n        }\r\n        else if(number.substring(0,1)==='+'){\r\n            return \"+855\" +number.substring(1,number.length)\r\n        }\r\n        else if(number.substring(0,3)!=='855'){\r\n            return \"+855\" + number.substring(0,number.length)\r\n        }\r\n        else{\r\n            return number\r\n        }\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    if(id===undefined){\r\n        history.push(\"/\")\r\n        return\r\n    }\r\n\r\n    const handleNumber=(e)=>{\r\n        const rx_live = /^[+-]?\\d*(?:[.,]\\d*)?$/;\r\n\r\n        if (rx_live.test(e)) {\r\n            form.setFieldsValue({\r\n                tel:e\r\n            })\r\n        }else{\r\n            form.setFieldsValue({\r\n                tel:\"\"\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    const setUpRecaptcha = () => {\r\n        window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\r\n          'size': 'invisible',\r\n          'callback': (response) => {\r\n            // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n            // ...\r\n          },\r\n          'expired-callback': () => {\r\n            // Response expired. Ask user to solve reCAPTCHA again.\r\n            // ...\r\n          }\r\n        }, auth);\r\n      }\r\n    \r\n    \r\n      const onSignInSubmit = async (e) => {\r\n        // e.preventDefault();\r\n            setUpRecaptcha()\r\n            const phoneNumber1 = e.tel;\r\n            const appVerifier = window.recaptchaVerifier;\r\n\r\n            signInWithPhoneNumber(auth, phoneNumber1, appVerifier)\r\n                .then((confirmationResult) => {\r\n                // SMS sent. Prompt user to type the code from the message, then sign the\r\n                // user in with confirmationResult.confirm(code).\r\n                window.confirmationResult = confirmationResult;\r\n                setConfirmResult(confirmationResult)\r\n                setIsSent(\"verifyCode\")\r\n                // ...\r\n                }).catch((error) => {\r\n                // Error; SMS not sent\r\n                // ...\r\n                    console.log(error)\r\n                    setLoading(false)\r\n                });\r\n\r\n        // await admin.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\r\n        //     .then((confirmationResult) => {\r\n        //         // SMS sent. Prompt user to type the code from the message, then sign the\r\n        //         // user in with confirmationResult.confirm(code).\r\n        //         window.confirmationResult = confirmationResult;\r\n\r\n        //         setDisDigiCode(false)\r\n        //         setDisBtn(false)\r\n        //         setConfirmResult(confirmationResult)\r\n        //         // ...\r\n        //     }).catch((error) => {\r\n        //         // Error; SMS not sent\r\n        //         // ...\r\n        //         if (error.code === \"auth/too-many-requests\") {\r\n        //             // setMsgTel(\"លេខទូរស័ព្ទនេះត្រូវបានបិទដោយមានសកម្មភាពមិនត្រឹមត្រូវ, សូមសាកល្បងនៅពេលក្រោយ។\")\r\n        //             modalError(\"លេខទូរស័ព្ទនេះត្រូវបានបិទដោយមានសកម្មភាពមិនត្រឹមត្រូវ, សូមសាកល្បងនៅពេលក្រោយ។\");\r\n        //         } else if (error.code === \"auth/invalid-phone-number\"){\r\n        //             modalError(\"សូមបញ្ចូលលេខទូរស័ព្ទអោយបានត្រឹមត្រូវ!\");\r\n        //         } else {\r\n        //             modalError(\"ការបញ្ចូលមានបញ្ហាសូមត្រួតពិនិត្យម្តងទៀត!\");\r\n        //         }\r\n        //         console.log(error)\r\n        //     });\r\n    }\r\n\r\n    const confirmCode = async (e) => {\r\n        // const code = window.prompt(\"បញ្ចូលលេខកូដដែលបានផ្ញើទៅលេខទូរស័ព្ទអ្នក។\");\r\n        await confirmResult.confirm(e).then((result) => {\r\n            // User signed in successfully.\r\n            // const user = result.user;\r\n            // ...\r\n            const user = result.user\r\n            \r\n            verifyCode({\r\n                variables:{\r\n                    firstName:personalInfo?.firstName,\r\n                    lastName: personalInfo?.lastName,\r\n                    phonenumber: personalInfo?.tel\r\n                }\r\n            })\r\n            \r\n        }).catch((error) => {\r\n            // User couldn't sign in (bad verification code?)\r\n            // ...\r\n            // setMsgCode(\"កូដដែលបញ្ចូលមិនត្រឹមត្រូវ, សូមបញ្ចូលម្តងទៀត!\")\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    return (\r\n        \r\n        <div style={{padding:\"20px\",height:'100%'}}>\r\n            \r\n            {isSent ===\"sendCode\" ?\r\n            <Row >\r\n                \r\n                <Col xs={24} md={24} >\r\n                    \r\n                    <Card\r\n                        style={{margin:'0 auto',width: isMoble ? '100%':'50%'}}\r\n                    >\r\n                        <Form\r\n                            form={form}\r\n                            name=\"login\"\r\n                            onFinish={onFinish}\r\n                            onFinishFailed={onFinishFailed}\r\n                            style={{color:'#014283'}}\r\n                        >\r\n                            <div id=\"recaptcha-container\"/>\r\n                            <Row >\r\n                                <Col xs={24} md={24} style={{textAlign:'center'}}>\r\n                                    <h3 className=\"HeaderFont\">សូមបញ្ចូលព័ត៌មានរបស់អ្នក</h3><br/>\r\n                                </Col>\r\n                                <Col xs={24} md={24}>\r\n                                    <p style={{fontSize:18}}><BsPersonLinesFill />&emsp;គោត្តនាម</p>\r\n                                    <Form.Item \r\n                                        name=\"lastName\"\r\n                                        rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                    >\r\n                                        \r\n                                        <Input placeholder=\"គោត្តនាម\" size=\"large\" style={{borderRadius:10}} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} md={24}>\r\n                                    <p style={{fontSize:18}}><BsPersonLinesFill />&emsp;នាម</p>\r\n                                    <Form.Item\r\n                                        name=\"firstName\"\r\n                                        rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                    >\r\n                                        \r\n                                        <Input placeholder=\"នាម\" size=\"large\" style={{borderRadius:10}}/>\r\n                                    </Form.Item>\r\n                                </Col>\r\n\r\n                                <Col xs={24} md={24}>\r\n                                    <p style={{fontSize:18}}><MdOutlinePermPhoneMsg/>&emsp;លេខទូរស័ព្ទ</p>\r\n                                    <Form.Item\r\n                                        name=\"tel\"\r\n                                        rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                    >\r\n                                        \r\n                                        <Input placeholder=\"លេខទូរស័ព្ទ\" onChange={(e)=> handleNumber(e.target.value)} size=\"large\"  style={{borderRadius:10}}/>\r\n                                    </Form.Item>\r\n                                </Col>\r\n\r\n                                <Col xs={24} md={24}>\r\n                                    <Form.Item\r\n                                        \r\n                                    >\r\n                                        <Button\r\n                                            htmlType=\"submit\"\r\n                                            type=\"primary\"\r\n                                            size=\"large\"\r\n                                            style={{ width: \"100%\",height:'100%',borderRadius:10 }}\r\n                                            loading={loading}\r\n                                        >\r\n                                            បន្ត&emsp;<FaArrowAltCircleRight/>\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                        \r\n                        </Form>\r\n                    </Card>\r\n                    \r\n                </Col>\r\n               \r\n            </Row>\r\n            :null}\r\n\r\n            { isSent === \"verifyCode\" ?\r\n                <Verify verifyCode={confirmCode} personalInfo={personalInfo} isMoble={isMoble} loading={verifyLoading}/>\r\n            :null} \r\n\r\n            { isSent === \"successMessage\" ?          \r\n                <Success isMoble={isMoble} shopData={shopData} />       \r\n            :null} \r\n\r\n            </div>\r\n        \r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/srLogo-nobg.3caecaed.png\";","import React, { useContext } from 'react'\r\nimport { Layout,Image, Col, Row } from 'antd'\r\n// import { HeaderData } from '../context/headerContext'\r\nimport {UserSwitchOutlined} from '@ant-design/icons'\r\nimport Logo from '../asset/srLogo-nobg.png'\r\n\r\nconst { Header } = Layout\r\n\r\nexport default function Navbar() {\r\n    // const { user } = useContext(HeaderData)\r\n\r\n    return (\r\n        // background:'#0087c0'\r\n        // background: 'repeating-linear-gradient(-55deg,#005b3d,#005b3d 30px,#005438 30px,#005438 40px)'\r\n        <Header className=\"site-layout-background\" style={{padding:0,background:'#014283',height:100 }}>\r\n            <Row>\r\n                <Col xs={7} sm={4} md={4} lg={2} style={{ color: \"white\"}}><Image className=\"img-logo\" src={Logo} preview={false} /></Col>\r\n                <Col xs={14} style={{ color: \"white\",fontSize:18,marginTop:15}}> រដ្ឋបាលខេត្តសៀមរាប</Col>\r\n            </Row>\r\n        </Header>\r\n    )\r\n}\r\n","import { Card, Col, Row } from 'antd'\r\nimport React, { useState,useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PleaseScan() {\r\n\r\n    const [isMoble,setIsMobile] = useState(false)\r\n\r\n    const handleResize =()=>{\r\n        if(window.innerWidth <=960){\r\n            setIsMobile(true)\r\n        }else{\r\n            setIsMobile(false)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        handleResize()\r\n    },[])\r\n\r\n    window.addEventListener('resize',handleResize)\r\n\r\n    return (\r\n        <div style={{padding:\"20px\"}}>\r\n            <Row >\r\n               \r\n               <Col xs={24} md={24} >\r\n                   \r\n                    <Card\r\n                        style={{margin:'0 auto',width: isMoble ? '100%':'50%', color:'#014283',textAlign:'center'}}\r\n                    >\r\n                        \r\n                        <h2 className=\"HeaderFont\">សូមស្កែន QR Code!</h2><br/>\r\n                        {/* <h2 className=\"HeaderFont\">ឈ្មោះ ហាង</h2>\r\n                        <p>អ្ន្កកមកដល់ទីនេះនៅថ្ងៃទី {getKhmerDate(today)} ៖ {getKhmerTime(today)}</p>\r\n                        \r\n                        <div style={{width:200,height:200,textAlign:\"center\",lineHeight:200, borderRadius:'50%',border:'2px solid #014283',margin:'0 auto'}}>\r\n                            <h2 className=\"HeaderFont\" style={{lineHeight:9.5,}}>រួចរាល់</h2>\r\n                        </div><br/> */}\r\n                        <p style={{fontSize:18}}>សូមអរគុណសម្រាប់ការចូលរួមរបស់អ្នក</p>\r\n                    </Card>\r\n                    {/* <Link to=\"/login\" >Test</Link> */}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  // Link\r\n} from \"react-router-dom\";\r\nimport Login from './page/Login';\r\nimport { Layout } from 'antd';\r\nimport Navbar from './dynamic/navbar';\r\nimport PleaseScan from './page/PleaseScan';\r\nimport Success from './page/Success';\r\n\r\nconst { Footer, Content } = Layout\r\n\r\n// const Home = () => <Dashboard />\r\nconst LoginPage = () => <Login />\r\n\r\nfunction Routes() {\r\n  return (\r\n    \r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          {/* <MenuHeader /> */}\r\n            <Layout className=\"site-layout\">\r\n              {/* <Navbar /> */}\r\n              <Switch>\r\n                \r\n                  <Route path=\"/\">\r\n                    <PleaseScan />\r\n                  </Route>\r\n                  <Route exact path=\"/:id\" children={LoginPage}/>\r\n                  \r\n                  {/* <Route exact path=\"/:id\">\r\n                    <Login />\r\n                  </Route> */}\r\n              </Switch>\r\n            </Layout>\r\n        </Layout>\r\n      </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import './App.css';\nimport Routes from './Routes';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider\n} from \"@apollo/client\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  // Link\n} from \"react-router-dom\";\nimport { Helmet } from 'react-helmet'\nimport { Layout } from 'antd';\nimport Navbar from './dynamic/navbar';\nimport PleaseScan from './page/PleaseScan';\nimport Login from './page/Login';\nimport DocumentMeta from 'react-document-meta';\nimport Success from './page/Success';\n\nfunction App() {\n\n  const client = new ApolloClient({\n    uri: process.env.React_App_URI ,\n    cache:new InMemoryCache()\n  })\n\n  const meta = {\n    title: 'QR Code | Scan',\n    description: 'Siem Reap Province qr code scanner app',\n    meta: {\n        charset: 'utf-8',\n        name: {\n            description: 'Siem Reap Province qr code scanner app'\n        }\n    }\n  }\n\n  const Scan = () => <PleaseScan />\n  const LoginPage = () => <Login />\n\n  return (\n    <ApolloProvider client={client}>\n      <DocumentMeta {...meta} >\n      <Router>\n        \n        <Layout style={{ minHeight: '100vh' }}>\n          {/* <MenuHeader /> */}\n            <Layout className=\"site-layout\">\n              <Navbar />\n              <Switch>\n                  <Route path=\"/:id\" children={<Login />}/>\n                  <Route path=\"/\" component={Scan} />\n                  \n              </Switch>\n            </Layout>\n        </Layout>\n      </Router>\n      </DocumentMeta>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}