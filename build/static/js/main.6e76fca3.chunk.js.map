{"version":3,"sources":["graphql/verify.js","page/Verify.js","function/fn.js","page/Success.js","page/Login.js","asset/srLogo-nobg.png","dynamic/navbar.js","page/PleaseScan.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["SENDING_PHONE","gql","VERIFY_CODE","CREATE_TRANSACTION","Verify","verifyCode","personalInfo","isMoble","loading","Form","useForm","form","xs","md","style","margin","width","name","onFinish","values","variables","phonenumber","tel","code","onFinishFailed","errorInfo","console","log","color","textAlign","className","fontSize","Item","rules","required","message","placeholder","size","borderRadius","htmlType","type","getKhmerDate","date","d","moment","parseZone","format","toString","m","y","numArr","split","yearArr","numberKh","newArr","nd","i","length","push","join","ny","getKhmerTime","number","isNaN","getKhmerNumber","Success","today","Date","height","lineHeight","border","Login","id","useParams","history","useHistory","useState","setIsMobile","handleResize","window","innerWidth","useEffect","addEventListener","isSent","setIsSent","setPersonalInfo","useMutation","onCompleted","sendingPhone","success","error","onError","createTransaction","personalInfoId","shopId","verifyLoading","undefined","padding","Header","Layout","Navbar","background","gutter","src","Logo","preview","marginTop","PleaseScan","Footer","Content","Routes","App","client","ApolloClient","uri","process","cache","InMemoryCache","ApolloProvider","basename","minHeight","path","children","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e76fca3.chunk.js","sourcesContent":["import {gql} from '@apollo/client'\r\n\r\nexport const SENDING_PHONE = gql`\r\nmutation sendingPhone($phonenumber:String){\r\n    sendingPhone(phonenumber:$phonenumber){\r\n      success\r\n      message\r\n    }\r\n}\r\n`\r\n\r\nexport const VERIFY_CODE = gql`\r\nmutation verifyCode($phonenumber:String,$code:String,$firstName:String,$lastName:String){\r\n    verifyCode(phonenumber:$phonenumber,code:$code,firstName:$firstName,lastName:$lastName){\r\n      success\r\n      message\r\n      id\r\n    }\r\n}\r\n`\r\n\r\nexport const CREATE_TRANSACTION = gql`\r\nmutation createTransaction($personalInfoId:ID!,$shopId:ID!){\r\n    createTransaction(personalInfoId:$personalInfoId,shopId:$shopId){\r\n        success\r\n        message\r\n    }\r\n}\r\n`","import React from 'react'\r\nimport { Input,Button, Form,Row,Col,Card, message } from 'antd'\r\nimport {AiOutlineNumber} from 'react-icons/ai'\r\nimport {FaArrowAltCircleRight, FaUnlockAlt} from 'react-icons/fa'\r\nexport default function Verify({verifyCode,personalInfo,isMoble,loading}) {\r\n    let [form] = Form.useForm()\r\n    const onFinish = (values) => {\r\n        verifyCode({\r\n            variables:{\r\n                ...personalInfo,\r\n                phonenumber:personalInfo?.tel,\r\n                code:values.code\r\n            }\r\n        })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row >\r\n               \r\n                <Col xs={24} md={24} >\r\n                    \r\n                    <Card\r\n                        style={{margin:'0 auto',width: isMoble ? '100%':'50%'}}\r\n                    >\r\n                        <Form\r\n                            form={form}\r\n                            name=\"verifyCode\"\r\n                            onFinish={onFinish}\r\n                            onFinishFailed={onFinishFailed}\r\n                            style={{color:'#014283'}}\r\n                        >\r\n                            <Row >\r\n                                <Col xs={24} md={24} style={{textAlign:'center'}}>\r\n                                    <h2 className=\"HeaderFont\">សូមបញ្ជូលលេខកូដដែលយើងបានផ្ញើទៅកាន់លេខទូរស័ព្ទរបស់អ្នក</h2><br/>\r\n                                </Col>\r\n                                <Col xs={24} md={24}>\r\n                                    <p style={{fontSize:18}}><FaUnlockAlt />&emsp;លេខកូដ</p>\r\n                                    <Form.Item\r\n                                        name=\"code\"\r\n                                        rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                    >\r\n                                        <Input placeholder=\"លេខកូដ\" size=\"large\" style={{borderRadius:10}} />\r\n                                    </Form.Item>\r\n                                    <p style={{fontSize:14, textAlign:'center'}}>លេខកូដនិងផុតកំណត់ក្នុងរយះពេល 30 វិនាទី</p>\r\n                                </Col>\r\n\r\n                                <Col xs={24} md={24}>\r\n                                    <Form.Item\r\n                                        \r\n                                    >\r\n                                        <Button\r\n                                            htmlType=\"submit\"\r\n                                            type=\"primary\"\r\n                                            size=\"large\"\r\n                                            style={{ width: \"100%\",borderRadius:10 }}\r\n                                            loading={loading}\r\n                                        >\r\n                                            បន្ត&emsp;<FaArrowAltCircleRight/>\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n                        \r\n                        </Form>\r\n                    </Card>\r\n                    \r\n                </Col>\r\n               \r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import moment from \"moment\"\r\n\r\nexport function getKhmerNumber(number){\r\n\r\n    let numArr = number?.toString()?.split('')\r\n\r\n    let numberKh = ['០','១','២','៣','៤','៥','៦','៧','៨','៩']\r\n    let newArr = []\r\n\r\n    for(let i=0;i<numArr?.length;i++){\r\n        if(!isNaN(numArr[i]))\r\n            newArr.push(numberKh[numArr[i]])\r\n        else{\r\n            newArr.push(numArr[i])\r\n        }\r\n    }\r\n    return newArr?.join(\"\")\r\n  }\r\n\r\nexport function getKhmerDate(date){\r\n    let d = moment.parseZone(date).format(\"D\").toString()\r\n    let m = moment.parseZone(date).format(\"M\") - 1\r\n    let y = moment.parseZone(date).format(\"YYYY\").toString()\r\n  \r\n    let numArr = d.split('')\r\n    let yearArr = y.split(\"\")\r\n  \r\n    let numberKh = ['០','១','២','៣','៤','៥','៦','៧','៨','៩']\r\n    let monthKh = ['មករា','កុម្ភៈ','មិនា','មេសា','ឧសភា','មិថុនា','កក្កដា','សីហា','កញ្ញា','តុលា','វិច្ឆិកា','ធ្នូរ']\r\n    let newArr = []\r\n  \r\n    let nd =['ថ្ងៃទី']\r\n    for(let i=0;i<numArr.length;i++){\r\n      if(d < 10){\r\n        nd.push(numberKh[0])\r\n      }\r\n      nd.push(numberKh[numArr[i]])\r\n      if(i===numArr.length-1){\r\n        newArr.push(nd.join(\"\"))\r\n      }\r\n    }\r\n  \r\n    newArr.push('ខែ'+monthKh[m])\r\n  \r\n    let ny =['ឆ្នាំ']\r\n    for(let i=0;i<yearArr.length;i++){\r\n      // if(d < 10){\r\n      //   s.push(numberKh[0])\r\n      // }\r\n      ny.push(numberKh[yearArr[i]])\r\n      if(i===yearArr.length-1){\r\n        newArr.push(ny.join(\"\"))\r\n      }\r\n    }\r\n  \r\n    return newArr.join(\" \")\r\n  }\r\n\r\nexport const getKhmerTime=(date)=>{\r\n    let time = moment.parseZone(date).format(\"hh:mm\").toString()\r\n    return getKhmerNumber(time)\r\n}","import { Card, Col, Row } from 'antd'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport { getKhmerDate, getKhmerTime } from '../function/fn'\r\n\r\nexport default function Success({isMoble}) {\r\n\r\n    const today = new Date()\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row >\r\n               \r\n               <Col xs={24} md={24} >\r\n                   \r\n                    <Card\r\n                        style={{margin:'0 auto',width: isMoble ? '100%':'50%', color:'#014283',textAlign:'center'}}\r\n                    >\r\n                        \r\n                        <h2 className=\"HeaderFont\">សូមស្វាគមន៍មកកាន់</h2><br/>\r\n                        <h2 className=\"HeaderFont\">ឈ្មោះ ហាង</h2>\r\n                        <p>អ្ន្កកមកដល់ទីនេះនៅថ្ងៃទី {getKhmerDate(today)} ៖ {getKhmerTime(today)}</p>\r\n                        \r\n                        <div style={{width:200,height:200,textAlign:\"center\",lineHeight:200, borderRadius:'50%',border:'2px solid #014283',margin:'0 auto'}}>\r\n                            <h2 className=\"HeaderFont\" style={{lineHeight:9.5,}}>រួចរាល់</h2>\r\n                        </div><br/>\r\n                        <p style={{fontSize:18}}>សូមអរគុណសម្រាប់ការចូលរួមរបស់អ្នក</p>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Input,Button, Form,Row,Col,Card, message } from 'antd'\r\nimport { CREATE_TRANSACTION, SENDING_PHONE, VERIFY_CODE } from '../graphql/verify'\r\nimport { useMutation } from '@apollo/client'\r\nimport Verify from './Verify'\r\nimport {FaArrowAltCircleRight} from 'react-icons/fa'\r\nimport {BsPersonLinesFill} from 'react-icons/bs'\r\nimport {MdOutlinePermPhoneMsg} from 'react-icons/md'\r\nimport Success from './Success'\r\nimport { useHistory, useParams } from 'react-router'\r\n\r\nexport default function Login() {\r\n\r\n    const { id } = useParams()\r\n    const {history} = useHistory()\r\n\r\n    const [isMoble,setIsMobile] = useState(false)\r\n\r\n    const handleResize =()=>{\r\n        if(window.innerWidth <=960){\r\n            setIsMobile(true)\r\n        }else{\r\n            setIsMobile(false)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        handleResize()\r\n    },[])\r\n\r\n    window.addEventListener('resize',handleResize)\r\n\r\n    let [form] = Form.useForm()\r\n    const [isSent,setIsSent] = useState(\"sendCode\") //sendCode verifyCode successMessage\r\n    const [personalInfo,setPersonalInfo] = useState({})\r\n\r\n    // send message to number\r\n    const [sendingPhone, { loading}] = useMutation(SENDING_PHONE, {\r\n        onCompleted: ({ sendingPhone }) => {\r\n            if(sendingPhone.success===true){\r\n                message.success(\"លេខកូដបានផ្ញើ\")\r\n                setIsSent(\"verifyCode\")\r\n            }else{\r\n                message.error(sendingPhone.message)\r\n            }\r\n        },\r\n        onError: (error) => {\r\n            message.error(error.message)\r\n        }\r\n    })\r\n\r\n    const [createTransaction,{loading:transactionLoading}] = useMutation(CREATE_TRANSACTION,{\r\n        onCompleted: ({ createTransaction }) => {\r\n            if(createTransaction.success===true){\r\n                message.success(\"លេខកូដត្រឹមត្រូវ\")\r\n                setIsSent(\"successMessage\")\r\n            }else{\r\n                message.error(createTransaction.message)\r\n            }\r\n        },\r\n        onError: (error) => {\r\n            message.error(error.message)\r\n        }\r\n    })\r\n    \r\n\r\n    // verify code \r\n    const [verifyCode, { loading:verifyLoading}] = useMutation(VERIFY_CODE, {\r\n        onCompleted: ({ verifyCode }) => {\r\n            if(verifyCode.success===true){\r\n                // message.success(\"លេខកូដត្រឹមត្រូវ\")\r\n                // setIsSent(\"successMessage\")\r\n\r\n                createTransaction({\r\n                    variables:{\r\n                        personalInfoId:verifyCode.id,\r\n                        shopId:id\r\n                    }\r\n                })\r\n            }else{\r\n                message.error(verifyCode.message)\r\n            }\r\n        },\r\n        onError: (error) => {\r\n            message.error(error.message)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        console.log(values)\r\n        sendingPhone({\r\n            variables:{\r\n                phonenumber:values.tel\r\n            }\r\n        })\r\n        setPersonalInfo(values)\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    if(id===undefined){\r\n        history.push(\"/\")\r\n        return\r\n    }\r\n\r\n    return (\r\n        \r\n        <div style={{padding:\"20px\"}}>\r\n            \r\n            {isSent ===\"sendCode\" ?\r\n            <Row >\r\n                \r\n                <Col xs={24} md={24} >\r\n                    \r\n                    <Card\r\n                        style={{margin:'0 auto',width: isMoble ? '100%':'50%'}}\r\n                    >\r\n                        <Form\r\n                            form={form}\r\n                            name=\"login\"\r\n                            onFinish={onFinish}\r\n                            onFinishFailed={onFinishFailed}\r\n                            style={{color:'#014283'}}\r\n                        >\r\n                            <Row >\r\n                                <Col xs={24} md={24} style={{textAlign:'center'}}>\r\n                                    <h2 className=\"HeaderFont\">សូមបញ្ចូលព័ត៌មានរបស់អ្នក</h2><br/>\r\n                                </Col>\r\n                                <Col xs={24} md={24}>\r\n                                    <p style={{fontSize:18}}><BsPersonLinesFill />&emsp;គោត្តនាម</p>\r\n                                    <Form.Item \r\n                                        name=\"lastName\"\r\n                                        rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                    >\r\n                                        \r\n                                        <Input placeholder=\"គោត្តនាម\" size=\"large\" style={{borderRadius:10}} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={24} md={24}>\r\n                                    <p style={{fontSize:18}}><BsPersonLinesFill />&emsp;នាម</p>\r\n                                    <Form.Item\r\n                                        name=\"firstName\"\r\n                                        rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                    >\r\n                                        \r\n                                        <Input placeholder=\"នាម\" size=\"large\" style={{borderRadius:10}}/>\r\n                                    </Form.Item>\r\n                                </Col>\r\n\r\n                                <Col xs={24} md={24}>\r\n                                    <p style={{fontSize:18}}><MdOutlinePermPhoneMsg/>&emsp;លេខទូរស័ព្ទ</p>\r\n                                    <Form.Item\r\n                                        name=\"tel\"\r\n                                        rules={[{ required: true, message: 'ត្រូវបំពេញប្រអប់ខាងលើ!' }]}\r\n                                    >\r\n                                        \r\n                                        <Input placeholder=\"លេខទូរស័ព្ទ\" size=\"large\"  style={{borderRadius:10}}/>\r\n                                    </Form.Item>\r\n                                </Col>\r\n\r\n                                <Col xs={24} md={24}>\r\n                                    <Form.Item\r\n                                        \r\n                                    >\r\n                                        <Button\r\n                                            htmlType=\"submit\"\r\n                                            type=\"primary\"\r\n                                            size=\"large\"\r\n                                            style={{ width: \"100%\",height:'100%',borderRadius:10 }}\r\n                                            loading={loading}\r\n                                        >\r\n                                            បន្ត&emsp;<FaArrowAltCircleRight/>\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n                        \r\n                        </Form>\r\n                    </Card>\r\n                    \r\n                </Col>\r\n               \r\n            </Row>\r\n            :null}\r\n\r\n            { isSent === \"verifyCode\" ?\r\n                <Verify verifyCode={verifyCode} personalInfo={personalInfo} isMoble={isMoble} loading={verifyLoading} />\r\n            :null} \r\n\r\n            { isSent === \"successMessage\" ? \r\n                <Success isMoble={isMoble} />\r\n            :null}\r\n\r\n            </div>\r\n        \r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/srLogo-nobg.379b96a5.png\";","import React, { useContext } from 'react'\r\nimport { Layout,Image, Col, Row } from 'antd'\r\n// import { HeaderData } from '../context/headerContext'\r\nimport {UserSwitchOutlined} from '@ant-design/icons'\r\nimport Logo from '../asset/srLogo-nobg.png'\r\n\r\nconst { Header } = Layout\r\n\r\nexport default function Navbar() {\r\n    // const { user } = useContext(HeaderData)\r\n\r\n    return (\r\n        // background:'#0087c0'\r\n        // background: 'repeating-linear-gradient(-55deg,#005b3d,#005b3d 30px,#005438 30px,#005438 40px)'\r\n        <Header className=\"site-layout-background\" style={{ padding: '0px 15px',background:'#014283',height:100 }}>\r\n            <Row gutter={100}>\r\n                <Col xs={1} style={{ color: \"white\"}}><Image className=\"img-logo\" src={Logo} preview={false} /></Col>\r\n                <Col xs={14} style={{ color: \"white\",fontSize:18,marginTop:15}}> រដ្ឋបាលខេត្តសៀមរាប</Col>\r\n            </Row>\r\n        </Header>\r\n    )\r\n}\r\n","import { Card, Col, Row } from 'antd'\r\nimport React, { useState,useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PleaseScan() {\r\n\r\n    const [isMoble,setIsMobile] = useState(false)\r\n\r\n    const handleResize =()=>{\r\n        if(window.innerWidth <=960){\r\n            setIsMobile(true)\r\n        }else{\r\n            setIsMobile(false)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        handleResize()\r\n    },[])\r\n\r\n    window.addEventListener('resize',handleResize)\r\n\r\n    return (\r\n        <div style={{padding:\"20px\"}}>\r\n            <Row >\r\n               \r\n               <Col xs={24} md={24} >\r\n                   \r\n                    <Card\r\n                        style={{margin:'0 auto',width: isMoble ? '100%':'50%', color:'#014283',textAlign:'center'}}\r\n                    >\r\n                        \r\n                        <h2 className=\"HeaderFont\">សូមមេត្តាស្កែន QR Code!</h2><br/>\r\n                        {/* <h2 className=\"HeaderFont\">ឈ្មោះ ហាង</h2>\r\n                        <p>អ្ន្កកមកដល់ទីនេះនៅថ្ងៃទី {getKhmerDate(today)} ៖ {getKhmerTime(today)}</p>\r\n                        \r\n                        <div style={{width:200,height:200,textAlign:\"center\",lineHeight:200, borderRadius:'50%',border:'2px solid #014283',margin:'0 auto'}}>\r\n                            <h2 className=\"HeaderFont\" style={{lineHeight:9.5,}}>រួចរាល់</h2>\r\n                        </div><br/> */}\r\n                        <p style={{fontSize:18}}>សូមអរគុណសម្រាប់ការចូលរួមរបស់អ្នក</p>\r\n                    </Card>\r\n                    {/* <Link to=\"/login\" >Test</Link> */}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  // Link\r\n} from \"react-router-dom\";\r\nimport Login from './page/Login';\r\nimport { Layout } from 'antd';\r\nimport Navbar from './dynamic/navbar';\r\nimport PleaseScan from './page/PleaseScan';\r\n\r\nconst { Footer, Content } = Layout\r\n\r\n// const Home = () => <Dashboard />\r\nconst LoginPage = () => <Login />\r\n\r\nfunction Routes() {\r\n  return (\r\n    \r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          {/* <MenuHeader /> */}\r\n            <Layout className=\"site-layout\">\r\n              <Navbar />\r\n              <Switch>\r\n                  <Route path=\"/\">\r\n                    <PleaseScan />\r\n                  </Route>\r\n                  <Route exact path=\"/:id\" children={LoginPage}/>\r\n                  {/* <Route exact path=\"/:id\">\r\n                    <Login />\r\n                  </Route> */}\r\n              </Switch>\r\n            </Layout>\r\n        </Layout>\r\n      </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import './App.css';\nimport Routes from './Routes';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider\n} from \"@apollo/client\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  // Link\n} from \"react-router-dom\";\nimport { Layout } from 'antd';\nimport Navbar from './dynamic/navbar';\nimport PleaseScan from './page/PleaseScan';\nimport Login from './page/Login';\n\nfunction App() {\n\n  const client = new ApolloClient({\n    uri: process.env.React_App_URI ,\n    cache:new InMemoryCache()\n  })\n\n  const Scan = () => <PleaseScan />\n  const LoginPage = () => <Login />\n\n  return (\n    <ApolloProvider client={client}>\n      <Router basename=\"/build\">\n        <Layout style={{ minHeight: '100vh' }}>\n          {/* <MenuHeader /> */}\n            <Layout className=\"site-layout\">\n              <Navbar />\n              <Switch>\n                  {/* <Route exact path=\"/:id\">\n                    <Login />\n                  </Route> */}\n                  <Route path=\"/:id\" children={<Login />}/>\n                  <Route path=\"/\" component={Scan} />\n                  \n              </Switch>\n            </Layout>\n        </Layout>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}